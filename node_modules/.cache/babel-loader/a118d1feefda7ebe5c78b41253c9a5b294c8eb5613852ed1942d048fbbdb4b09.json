{"ast":null,"code":"var _jsxFileName = \"D:\\\\mpti-forum\\\\forum\\\\src\\\\Components\\\\Element\\\\Avatar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = ({\n  name,\n  username,\n  profileImage,\n  createdAt,\n  postId\n}) => {\n  _s();\n  const [timeText, setTimeText] = useState(formatTime(createdAt));\n  function formatTime(createdAt) {\n    const now = new Date();\n    const diffInSeconds = Math.floor((now - createdAt) / 1000);\n    if (diffInSeconds < 1) return \"Baru saja\";\n    if (diffInSeconds < 60) return `${diffInSeconds} detik yang lalu`;\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\n    if (diffInMinutes < 60) return `${diffInMinutes} menit yang lalu`;\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours} jam yang lalu`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays} hari yang lalu`;\n  }\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeText(formatTime(createdAt));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [createdAt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-shrink-0 p-4 pt- pb-0\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"flex-shrink-0 group block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"inline-block h-10 w-10 rounded-full\",\n            src: profileImage,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base leading-6 font-bold text-white mb-2\",\n            children: [name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm px-1 leading-5 font-medium text-gray-400 group-hover:text-gray-300 transition ease-in-out duration-150\",\n              children: [\"@\", username, \" \\xB7 \", timeText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, postId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Avatar, \"YvdVpLuii4FM++OJF+IkVp8gxkQ=\");\n_c = Avatar;\nexport default Avatar;\nvar _c;\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Avatar","name","username","profileImage","createdAt","postId","_s","timeText","setTimeText","formatTime","now","Date","diffInSeconds","Math","floor","diffInMinutes","diffInHours","diffInDays","interval","setInterval","clearInterval","className","children","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/mpti-forum/forum/src/Components/Element/Avatar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Avatar = ({ name, username, profileImage, createdAt, postId }) => {\r\n    const [timeText, setTimeText] = useState(formatTime(createdAt));\r\n\r\n    function formatTime(createdAt) {\r\n        const now = new Date();\r\n        const diffInSeconds = Math.floor((now - createdAt) / 1000);\r\n\r\n        if (diffInSeconds < 1) return \"Baru saja\";\r\n        if (diffInSeconds < 60) return `${diffInSeconds} detik yang lalu`;\r\n        const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n        if (diffInMinutes < 60) return `${diffInMinutes} menit yang lalu`;\r\n        const diffInHours = Math.floor(diffInMinutes / 60);\r\n        if (diffInHours < 24) return `${diffInHours} jam yang lalu`;\r\n        const diffInDays = Math.floor(diffInHours / 24);\r\n        return `${diffInDays} hari yang lalu`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimeText(formatTime(createdAt)); \r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [createdAt]);\r\n    return (\r\n        <div className=\"flex flex-shrink-0 p-4 pt- pb-0\" key={postId}>\r\n            <a href=\"#\" className=\"flex-shrink-0 group block\">\r\n                <div className=\"flex items-center\">\r\n                    <div>\r\n                        <img\r\n                            className=\"inline-block h-10 w-10 rounded-full\"\r\n                            src={profileImage}\r\n                            alt=\"Profile\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"ml-3\">\r\n                        <p className=\"text-base leading-6 font-bold text-white mb-2\">\r\n                            {name}\r\n                            <span className=\"text-sm px-1 leading-5 font-medium text-gray-400 group-hover:text-gray-300 transition ease-in-out duration-150\">\r\n                                @{username} Â· {timeText}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Avatar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}